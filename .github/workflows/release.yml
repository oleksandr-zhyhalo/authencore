name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4

  build:
    name: Build Binaries
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build
        run: |
          # Create output directory first
          mkdir -p release
          
          # Build directly into release directory
          go build -ldflags "-s -w" -o release/authencore main.go
          
          # Copy config sample
          cp config/authencore.yml.sample release/
          
          # Verify files exist
          ls -la release/
          
          # Create tarball from release directory contents
          tar -czvf authencore-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C release .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: authencore-${{ matrix.goos }}-${{ matrix.goarch }}
          path: authencore-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  release:
    name: Create Release
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: authencore-*

      - name: Prepare release assets
        run: |
          mkdir -p release_assets
          find artifacts -name '*.tar.gz' -exec cp {} release_assets/ \;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body: "Authencore release - ${{ github.ref_name }}"
          files: |
            release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}